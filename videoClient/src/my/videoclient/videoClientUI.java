/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package my.videoclient;

import javax.swing.JOptionPane;

/**
 *
 * @author Theo
 */
public class videoClientUI extends javax.swing.JFrame {

    
    /**
     * Creates new form videoClientUI
     */
    public videoClientUI() {
        initComponents();
        setVisible(true);
        jPanel1.setVisible(true);
        jPanel2.setVisible(true);
        chooseCamera.setVisible(false);
        keysAndDescription.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        username = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        chooseCamera = new javax.swing.JPanel();
        cameraList = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        confirm = new javax.swing.JButton();
        keysAndDescription = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        send = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Client 2 Video Streaming");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Welcome to the Client 2 Video Streaming program!\nThis application allows registered users to \nrecord streaming video and upload it to our \nweb site for other registered users to view.\n\nEnter your username and password below to start\nrecording a new video: ");
        jTextArea1.setToolTipText("");
        jTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jTextArea1);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
        );

        username.setText("Username");
        username.setName("username"); // NOI18N

        password.setText("Password");

        submit.setText("Submit");
        submit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(username, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 157, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(39, 39, 39)
                        .add(password, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(137, 137, 137)
                        .add(submit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(31, 31, 31)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(username, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(password, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(submit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        chooseCamera.setName("chooseCamera"); // NOI18N
        chooseCamera.setPreferredSize(new java.awt.Dimension(372, 218));

        cameraList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("Choose the camera you wish to use for\nrecording your video. Select one of the\nchoices from the drop-down list below, \nand then click the 'confirm' button to\nproceed.");
        jTextArea2.setAutoscrolls(false);

        confirm.setActionCommand("confirm");
        confirm.setLabel("confirm");
        confirm.setName("confirm"); // NOI18N
        confirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout chooseCameraLayout = new org.jdesktop.layout.GroupLayout(chooseCamera);
        chooseCamera.setLayout(chooseCameraLayout);
        chooseCameraLayout.setHorizontalGroup(
            chooseCameraLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(chooseCameraLayout.createSequentialGroup()
                .add(chooseCameraLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(chooseCameraLayout.createSequentialGroup()
                        .add(146, 146, 146)
                        .add(confirm))
                    .add(chooseCameraLayout.createSequentialGroup()
                        .add(chooseCameraLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(chooseCameraLayout.createSequentialGroup()
                                .add(33, 33, 33)
                                .add(cameraList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 316, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(chooseCameraLayout.createSequentialGroup()
                                .add(23, 23, 23)
                                .add(jTextArea2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(39, 39, 39)
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        chooseCameraLayout.setVerticalGroup(
            chooseCameraLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, chooseCameraLayout.createSequentialGroup()
                .addContainerGap()
                .add(chooseCameraLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextArea2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(cameraList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(confirm)
                .add(55, 55, 55))
        );

        cameraList.getAccessibleContext().setAccessibleName("cameraList");
        cameraList.getAccessibleContext().setAccessibleParent(chooseCamera);
        jTextArea2.getAccessibleContext().setAccessibleName("");

        keysAndDescription.setPreferredSize(new java.awt.Dimension(400, 307));

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextArea3.setRows(5);
        jTextArea3.setText("In the blank text box below this one, enter search\nkeys (each separated by a space) that other users\ncan use to find your video on the website. In the \nnext text box, enter a description for your video.");
        jTextArea3.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane3.setViewportView(jTextArea3);

        jTextField1.setText("Keys");
        jTextField1.setName(""); // NOI18N

        jTextPane1.setText("Description");
        jScrollPane6.setViewportView(jTextPane1);

        send.setText("Send");
        send.setName("send"); // NOI18N
        send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout keysAndDescriptionLayout = new org.jdesktop.layout.GroupLayout(keysAndDescription);
        keysAndDescription.setLayout(keysAndDescriptionLayout);
        keysAndDescriptionLayout.setHorizontalGroup(
            keysAndDescriptionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(keysAndDescriptionLayout.createSequentialGroup()
                .add(159, 159, 159)
                .add(send)
                .add(0, 0, Short.MAX_VALUE))
            .add(keysAndDescriptionLayout.createSequentialGroup()
                .addContainerGap()
                .add(keysAndDescriptionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(keysAndDescriptionLayout.createSequentialGroup()
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 363, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2))
                    .add(keysAndDescriptionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 365, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 363, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        keysAndDescriptionLayout.setVerticalGroup(
            keysAndDescriptionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(keysAndDescriptionLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(send)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        send.getAccessibleContext().setAccessibleName("send");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .addContainerGap()
                    .add(chooseCamera, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addContainerGap()))
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(keysAndDescription, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(25, Short.MAX_VALUE)
                    .add(chooseCamera, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addContainerGap(124, Short.MAX_VALUE)))
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(0, 22, Short.MAX_VALUE)
                    .add(keysAndDescription, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 23, Short.MAX_VALUE)))
        );

        chooseCamera.getAccessibleContext().setAccessibleName("chooseCamera");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    //this is the event when someone submits a username & password to login
    private void submitClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitClicked
        
        //check if both fields match a valid username/pw pair 
        String x = username.getText();
        String y = password.getText();
        
        //JASON: this is where we authenticate the user
        //this IF will test if the account exists
        //i just placed some test conditions in here for now
        if(x.equals("a") && y.equals("b")){
            
            //get rid of default list of items from combo box
            cameraList.removeAllItems();
            
            //JASON: this is where you should search fot the available cameras
            //write them to the cams array as I did with the test names, 
            //as it will populate the upcoming comboBoz
            
            //get list of available cameras  
            String [] cams = {"a","b","c","d"};
            for(int i = 0; i < cams.length; i++){ 
                cameraList.addItem(cams[i]);
            }
            
            //hide the used panels, and show the new one
            jPanel1.setVisible(false);
            jPanel2.setVisible(false);
            chooseCamera.setVisible(true);
        }
        else{ //error message if account doesn't exist
          JOptionPane.showMessageDialog(null, "Invalid Username/Password pair", "Login Error", JOptionPane.ERROR_MESSAGE);  
        }
    }//GEN-LAST:event_submitClicked

    //event after a user selects a camera to use
    private void confirmClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmClicked

        chooseCamera.setVisible(false);
        keysAndDescription.setVisible(true);        
        
    }//GEN-LAST:event_confirmClicked

    //event after a user supplies search keys and a video description 
    private void sendClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendClicked

        String keys = jTextField1.getText();
        String desc = jTextPane1.getText();
        
        //just some test output
        System.out.println(keys + "\n" + desc);
        
        //JASON: this is where we'll send the keys and description to web team
        
        //this is where the video streaming should start
        //possibly Process p = Runtime.getRuntime().exec("ffmpeg ....");
    }//GEN-LAST:event_sendClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //videoClientUI gui = new videoClientUI();
        //gui.setVisible(true);
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(videoClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(videoClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(videoClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(videoClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new videoClientUI().setVisible(true);
            }
        });
    }    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cameraList;
    private javax.swing.JPanel chooseCamera;
    private javax.swing.JButton confirm;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JPanel keysAndDescription;
    private javax.swing.JTextField password;
    private javax.swing.JButton send;
    private javax.swing.JButton submit;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
